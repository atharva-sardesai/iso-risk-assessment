import type { RiskAssessment } from "./types"

export const initialRiskAssessments: RiskAssessment[] = [
  {
    id: "risk-1",
    companyName: "Example Corp",
    category: "Access Control",
    asset: "Customer Database",
    threat: "Unauthorized Access",
    vulnerability: "Weak password policies allowing brute force attacks",
    impact: 8,
    likelihood: 50,
    riskLevel: 4,
    existingControls: "Basic password requirements, account lockout after 5 failed attempts",
    treatmentPlan: "Implement MFA, password complexity requirements, and regular password rotation",
    owner: "Security Team",
    priority: "High",
    controlEffectiveness: "Medium",
  },
  {
    id: "risk-2",
    companyName: "Example Corp",
    category: "Network Security",
    asset: "Network Infrastructure",
    threat: "DDoS Attack",
    vulnerability: "Insufficient bandwidth and lack of traffic filtering",
    impact: 9,
    likelihood: 30,
    riskLevel: 2.7,
    existingControls: "Basic firewall configuration",
    treatmentPlan: "Implement DDoS protection service and traffic analysis",
    owner: "Network Team",
    priority: "Medium",
    controlEffectiveness: "Low",
  },
  {
    id: "risk-3",
    category: "Software Development Security",
    asset: "Web Application",
    threat: "SQL Injection",
    vulnerability: "Unvalidated user input in search forms",
    impact: 10,
    likelihood: 60,
    riskLevel: 6,
    existingControls: "Some input validation on frontend",
    treatmentPlan: "Implement prepared statements, input validation, and WAF",
    priority: "High",
    controlEffectiveness: "Low",
  },
  {
    id: "risk-4",
    category: "Business Continuity",
    asset: "Backup Systems",
    threat: "Data Loss",
    vulnerability: "Single point of failure in backup process",
    impact: 10,
    likelihood: 20,
    riskLevel: 2,
    existingControls: "Daily backups to local storage",
    treatmentPlan: "Implement redundant backup systems and off-site storage",
    priority: "Medium",
    controlEffectiveness: "Medium",
  },
  {
    id: "risk-5",
    category: "Physical Security",
    asset: "Server Room",
    threat: "Unauthorized Physical Access",
    vulnerability: "Inadequate access controls to server room",
    impact: 7,
    likelihood: 40,
    riskLevel: 2.8,
    existingControls: "Basic key card access",
    treatmentPlan: "Install CCTV, implement biometric access, and maintain access logs",
    priority: "Medium",
    controlEffectiveness: "Medium",
  },
  {
    id: "risk-6",
    asset: "Customer Data",
    threat: "Data Breach",
    vulnerability: "Weak Access Controls",
    impact: "High",
    likelihood: "High",
    riskLevel: "High",
    existingControls: "MFA, DLP, Logging",
    treatmentPlan: "Improve access controls, conduct training (Owner: CISO, Priority: Medium)",
  },
  {
    id: "risk-7",
    asset: "Source Code",
    threat: "Insider Threat",
    vulnerability: "No code review process",
    impact: "High",
    likelihood: "Medium",
    riskLevel: "Medium",
    existingControls: "GitHub protected branches",
    treatmentPlan: "Implement code reviews and role-based access (Owner: DevOps Head, Priority: Low)",
  },
  {
    id: "risk-8",
    asset: "HR Data",
    threat: "Phishing",
    vulnerability: "Lack of phishing awareness",
    impact: "High",
    likelihood: "High",
    riskLevel: "High",
    existingControls: "Email filtering, training",
    treatmentPlan: "Mandatory phishing simulations and training (Owner: HR Manager, Priority: Medium)",
  },
  {
    id: "risk-9",
    asset: "Web Server",
    threat: "DDoS",
    vulnerability: "No rate limiting",
    impact: "Medium",
    likelihood: "Medium",
    riskLevel: "Medium",
    existingControls: "WAF in place",
    treatmentPlan: "Monitor traffic, improve WAF rules (Owner: Infra Team, Priority: High)",
  },
  {
    id: "risk-10",
    asset: "Backup System",
    threat: "Ransomware",
    vulnerability: "No offline backup",
    impact: "High",
    likelihood: "Low",
    riskLevel: "Medium",
    existingControls: "Cloud backups",
    treatmentPlan: "Create offline encrypted backups weekly (Owner: IT Admin, Priority: Medium)",
  },
  {
    id: "risk-11",
    asset: "Financial System",
    threat: "Unauthorized Access",
    vulnerability: "Shared credentials",
    impact: "High",
    likelihood: "Medium",
    riskLevel: "High",
    existingControls: "Password policy",
    treatmentPlan: "Enforce individual login, password vaults (Owner: CFO, Priority: Low)",
  },
  {
    id: "risk-12",
    asset: "Endpoints",
    threat: "Malware",
    vulnerability: "No EDR solution",
    impact: "High",
    likelihood: "Medium",
    riskLevel: "High",
    existingControls: "Antivirus only",
    treatmentPlan: "Deploy EDR, tighten USB policies (Owner: IT Security, Priority: Low)",
  },
  {
    id: "risk-13",
    asset: "Email System",
    threat: "Spoofing",
    vulnerability: "Missing SPF/DKIM/DMARC",
    impact: "Medium",
    likelihood: "High",
    riskLevel: "Medium",
    existingControls: "Basic SPF",
    treatmentPlan: "Fully implement SPF, DKIM, DMARC (Owner: IT, Priority: Low)",
  },
  {
    id: "risk-14",
    asset: "SaaS App",
    threat: "API Abuse",
    vulnerability: "No rate limiting or auth on API",
    impact: "High",
    likelihood: "Medium",
    riskLevel: "High",
    existingControls: "None",
    treatmentPlan: "Apply API gateway, rate limiting (Owner: App Owner, Priority: N/A)",
  },
  {
    id: "risk-15",
    asset: "Cloud Storage",
    threat: "Data Leakage",
    vulnerability: "Publicly exposed buckets",
    impact: "High",
    likelihood: "Low",
    riskLevel: "Medium",
    existingControls: "Manual audits",
    treatmentPlan: "Automate bucket access reviews (Owner: Cloud Admin, Priority: Medium)",
  },
  // New risk assessments
  {
    id: "risk-16",
    category: "Cloud (AWS)",
    asset: "S3 Buckets",
    threat: "Data leakage",
    vulnerability: "Public buckets or misconfigured ACL",
    impact: "High",
    likelihood: "Possible",
    riskLevel: "High",
    existingControls: "S3 policy enforcement, CloudTrail",
    controlEffectiveness: "Medium",
    owner: "Cloud Admin",
    treatmentPlan: "Use IAM policies, automate bucket audits",
  },
  {
    id: "risk-17",
    category: "Cloud (Azure)",
    asset: "Key Vault",
    threat: "Unauthorized access",
    vulnerability: "No access policy restrictions",
    impact: "High",
    likelihood: "Likely",
    riskLevel: "High",
    existingControls: "Role-based access",
    controlEffectiveness: "Low",
    owner: "Azure Admin",
    treatmentPlan: "Enable RBAC, audit key access logs",
  },
  {
    id: "risk-18",
    category: "Application",
    asset: "Web App",
    threat: "Injection Attack",
    vulnerability: "Lack of input sanitization",
    impact: "High",
    likelihood: "Likely",
    riskLevel: "High",
    existingControls: "Basic validation",
    controlEffectiveness: "Low",
    owner: "App Owner",
    treatmentPlan: "Implement SAST/DAST, use libraries like OWASP",
  },
  {
    id: "risk-19",
    category: "WAF",
    asset: "Public API",
    threat: "DDoS or abuse",
    vulnerability: "No WAF configured",
    impact: "High",
    likelihood: "Possible",
    riskLevel: "High",
    existingControls: "None",
    controlEffectiveness: "N/A",
    owner: "Security Team",
    treatmentPlan: "Enable WAF with rules for rate limiting",
  },
  {
    id: "risk-20",
    category: "Network",
    asset: "Internal Servers",
    threat: "Unauthorized scanning",
    vulnerability: "No IDS/IPS",
    impact: "Medium",
    likelihood: "Likely",
    riskLevel: "Medium",
    existingControls: "Firewalls",
    controlEffectiveness: "Low",
    owner: "Network Admin",
    treatmentPlan: "Deploy IDS/IPS, enable logging",
  },
  {
    id: "risk-21",
    category: "SAST",
    asset: "Source Code",
    threat: "Logic flaws",
    vulnerability: "Missing code review or SAST",
    impact: "High",
    likelihood: "Possible",
    riskLevel: "Medium",
    existingControls: "Git Hooks",
    controlEffectiveness: "Low",
    owner: "DevSecOps",
    treatmentPlan: "Integrate SAST with CI/CD",
  },
  {
    id: "risk-22",
    category: "DAST",
    asset: "App Environment",
    threat: "Business logic abuse",
    vulnerability: "Lack of runtime testing",
    impact: "Medium",
    likelihood: "Possible",
    riskLevel: "Medium",
    existingControls: "None",
    controlEffectiveness: "N/A",
    owner: "QA Lead",
    treatmentPlan: "Schedule DAST scans per sprint",
  },
  {
    id: "risk-23",
    category: "Employee",
    asset: "HR Data",
    threat: "Phishing attack",
    vulnerability: "No training or awareness",
    impact: "High",
    likelihood: "Likely",
    riskLevel: "High",
    existingControls: "Anti-phish training quarterly",
    controlEffectiveness: "Medium",
    owner: "HR Lead",
    treatmentPlan: "Increase frequency, simulate attacks",
  },
  {
    id: "risk-24",
    category: "Endpoint",
    asset: "Employee Laptop",
    threat: "Malware",
    vulnerability: "No EDR or USB control",
    impact: "High",
    likelihood: "Likely",
    riskLevel: "High",
    existingControls: "Antivirus only",
    controlEffectiveness: "Low",
    owner: "IT Security",
    treatmentPlan: "Deploy EDR, disable USB",
  },
  {
    id: "risk-25",
    category: "Third-party",
    asset: "SaaS Billing Tool",
    threat: "Vendor data breach",
    vulnerability: "No DPIA or access review",
    impact: "High",
    likelihood: "Possible",
    riskLevel: "High",
    existingControls: "None",
    controlEffectiveness: "N/A",
    owner: "CISO",
    treatmentPlan: "Conduct DPIA, use vendor security checklist",
  },
]

